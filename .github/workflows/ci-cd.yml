name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - test
  pull_request:
    branches:
      - main
      - test

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: List Repository Files
        run: ls -al

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: List Repository Files
        run: ls -al

      - name: Check if package.json Exists
        working-directory: ./card-capture
        run: test -f package.json || { echo "package.json not found"; exit 1; }

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Set Node.js memory limit
        run: |
          echo "NODE_OPTIONS=--max-old-space-size=8192" >> $GITHUB_ENV

      - name: Deploy to Server
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REPO_URL: ${{ github.server_url }}/${{ github.repository }}.git
          NEXT_PUBLIC_API_KEY: ${{ secrets.NEXT_PUBLIC_API_KEY }}
          NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.NEXT_PUBLIC_SENTRY_DSN }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          NODE_OPTIONS: '--max-old-space-size=8192'

        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' | sed 's/\\n/\n/g' > deployment_key.pem
          chmod 400 deployment_key.pem
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

          ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=600 -o ServerAliveCountMax=1200 -i deployment_key.pem ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} <<'EOF'
            set -e

            BASE_DIR="/home/${{ secrets.SERVER_USER }}/card-capture-fe"
            PROJECT_DIR="$BASE_DIR/card-capture"
            REPO_URL="https://github.com/SW-rocket-dan/card-capture-fe.git"

            echo "BASE_DIR: $BASE_DIR"
            echo "PROJECT_DIR: $PROJECT_DIR"
            echo "REPO_URL: $REPO_URL"
          
            if [ -d "$BASE_DIR" ]; then
              echo "Removing existing directory..."
              rm -rf "$BASE_DIR"
            fi

            echo "Creating new directory..."
            mkdir -p "$BASE_DIR"
            cd "$BASE_DIR"

            echo "Cloning repository..."
            git clone $REPO_URL . || { echo "Git clone failed"; exit 1; }

            cd "$PROJECT_DIR"

            echo "Current directory: $(pwd)"
            ls -la

            echo "Setting environment variables..."
            echo "NEXT_PUBLIC_API_KEY=${{ secrets.NEXT_PUBLIC_API_KEY }}" > .env
          
            echo "Installing npm packages..."
            npm install
          
            echo "Building the repository..."
            NODE_OPTIONS=--max-old-space-size=8192 npm run build # 빌드 시 메모리 한도 적용

            echo "Deleting existing PM2 process..."
            pm2 delete card-capture || true

            echo "Starting application with PM2..."
            NODE_OPTIONS=--max-old-space-size=8192 pm2 start npm --name "card-capture" -- start # PM2 시작 시 메모리 한도 적용

            echo "Saving PM2 configuration..."
            pm2 save

            echo "Setting PM2 to start on boot..."
            pm2 startup | tail -n 1 | sudo bash
          EOF
